CREATE OR REPLACE FUNCTION control_panel.load_data()
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$ 
declare
	result1 character varying(100);
	result2 character varying(100);
	result3 character varying(100);
	result4 character varying(100);
	result5 character varying(100);
	result6 character varying(100);
	result7 character varying(100);
BEGIN

		result1 := load_tb_corporativos(current_date);
		result2 := load_tb_factoring(current_date);
		result3 := load_tb_factoring_error_process(current_date);
		result4 := load_tb_garantias(current_date);
		result5 := load_tb_internacionales(current_date);
		result6 := load_tb_liquidaciones(current_date);
		result7 := load_tb_liquidaciones_ciclos(current_date);
	return 'sucess';
END 
 $function$

------

CREATE OR REPLACE FUNCTION control_panel.load_tb_corporativos(load_date date)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$

BEGIN
	
delete from tb_corporativos t
where to_char(DATE_TRUNC('day',t.OP_DT_OPERATION),'dd-mm-yyyy') = to_char(load_date,'dd-mm-yyyy');

insert into tb_corporativos
SELECT 
		DISTINCT 
		nextval('tb_corporativos') id_corporativos,
		OPE."OP_ID_OPERATION_PK",
        OPE."OP_DT_OPERATION",
        OPE."OP_ID_STATE",
        (SELECT ET."EL_ELEMENT_NAME" 
        FROM public."ELEMENT_TABLES" ET
        WHERE ET."EL_ELEMENT_TABLE_PK" = OPE."OP_ID_STATE") OP_STATE,
        OPE."OP_LAST_MODIFY_USER",
        OPE."OP_LAST_MODIFY_DATE",
        CP."CP_ID_COMPENSATION_STATE",
        (SELECT ET."EL_ELEMENT_NAME" 
        FROM public."ELEMENT_TABLES" ET
        WHERE ET."EL_ELEMENT_TABLE_PK" = CP."CP_ID_COMPENSATION_STATE") CP_COMPENSATION_STATE,
        CP."CP_DT_ACCORD",
        CP."CP_DT_CUTOFF",
        CP."CP_DT_RECORD",
        CP."CP_DT_DELIVERY",
        CP."CP_TYPE_CORPORATIVE_PROCESS" AS CP_TYPE_CORP_PROCESS,
        (SELECT ET."EL_ELEMENT_NAME" 
        FROM public."ELEMENT_TABLES" ET
        WHERE ET."EL_ELEMENT_TABLE_PK" = CP."CP_TYPE_CORPORATIVE_PROCESS") CP_CORPORATIVE_PROCESS,
        (CASE 
        WHEN CP."CP_TYPE_CORPORATIVE_PROCESS" IN (279,280,281,282,283,284,285) THEN 'SI'
        ELSE 'NO'
        END) CP_IND_SPECIAL,
                               (CASE 
        WHEN CP."CP_TYPE_CORPORATIVE_PROCESS" IN (2198,280,283,279,272,286,285,274,289,284) THEN 1
        WHEN CP."CP_TYPE_CORPORATIVE_PROCESS" IN (276,273,275,2197,2196) THEN 2
        WHEN CP."CP_TYPE_CORPORATIVE_PROCESS" IN (277) THEN 3
        ELSE 0
        END) CP_ID_BENEFIT_TYPE,
        (CASE 
        WHEN CP."CP_TYPE_CORPORATIVE_PROCESS" IN (2198,280,283,279,272,286,285,274,289,284) THEN 'VALORES' 
        WHEN CP."CP_TYPE_CORPORATIVE_PROCESS" IN (276,273,275,2197,2196) THEN 'EFECTIVO'
        WHEN CP."CP_TYPE_CORPORATIVE_PROCESS" IN (277) THEN 'AMBOS'
        ELSE 'NINGUNO'
        END) CP_BENEFIT_TYPE,
        CP."IS_CD_ISIN_ISSUER_FK",
        (SELECT ISS."IS_ST_COMPANY_NAME" 
        FROM public."ISSUERS" ISS
        WHERE ISS."IS_CD_ISIN_ISSUER_PK" = CP."IS_CD_ISIN_ISSUER_FK") IS_ST_COMPANY_NAME,
        SE."SE_ID_INSTRUMENT_TYPE",
        (SELECT ET."EL_ELEMENT_NAME" 
        FROM public."ELEMENT_TABLES" ET
        WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_ID_INSTRUMENT_TYPE") SE_INSTRUMENT_TYPE,
                               SE."SE_SECURITY_ORIGIN",
                               (SELECT ET."EL_ELEMENT_NAME" 
                               FROM public."ELEMENT_TABLES" ET
                               WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_SECURITY_ORIGIN") SE_ORIGIN,
        SE."SE_CD_ISIN_CODE_PK" AS SE_CD_ISIN_CODE_FK,
        SE."SE_ST_MNEMONIC",
        SE."SE_CD_CURRENCY",
        (SELECT ET."EL_ELEMENT_NAME" 
        FROM public."ELEMENT_TABLES" ET
        WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_CD_CURRENCY") SE_CURRENCY,
        PCR."PA_ID_PARTICIPANT_FK",
        (SELECT PA."PA_ST_TRADE_NAME" 
         FROM public."PARTICIPANTS" PA
         WHERE PA."PA_ID_PARTICIPANT_PK" = PCR."PA_ID_PARTICIPANT_FK") PA_ST_TRADE_NAME,
         coalesce((SELECT PSC."PSC_STOCK_CALCULATION_PK" 
        FROM public."PROCESS_STOCK_CALCULATIONS" PSC
        WHERE PSC."PSC_STATE_STOCK" = 2
        AND PSC."PSC_TYPE_STOCK" = 2131
        AND PSC."PSC_IND_STOCK_CLASS" = 2174
        AND DATE_TRUNC('day',PSC."PSC_DT_CUTOFF_DATE") = DATE_TRUNC('day',CP."CP_DT_CUTOFF")
        AND DATE_TRUNC('day',PSC."PSC_DT_RECORDING_DATE") = DATE_TRUNC('day',CP."CP_DT_RECORD")
        AND PSC."SE_CD_ISIN_CODE_FK" = CP."SE_CD_ISIN_CODE_FK"),0) PSC_STOCK_CALCULATION_PK,
        coalesce((SELECT SUM(PCR1."PCR_TOTAL_BALANCE") 
        FROM public."PROCESS_CORPORATE_RESULTS" PCR1
        WHERE PCR1."OP_ID_OPERATION_FK" = OPE."OP_ID_OPERATION_PK"
        AND PCR1."PA_ID_PARTICIPANT_FK" = PCR."PA_ID_PARTICIPANT_FK"
        AND PCR1."PCR_ORIGIN_DESTINY" = 1),0) PCR_BALANCE_ORIGIN,
        coalesce((SELECT SUM(PCR1."PCR_TOTAL_BALANCE") 
        FROM public."PROCESS_CORPORATE_RESULTS" PCR1
        WHERE PCR1."OP_ID_OPERATION_FK" = OPE."OP_ID_OPERATION_PK"
        AND PCR1."PA_ID_PARTICIPANT_FK" = PCR."PA_ID_PARTICIPANT_FK"
        AND PCR1."PCR_ORIGIN_DESTINY" = 2),0) PCR_BALANCE_DESTINY,
        coalesce(NULLIF(
				(SELECT COUNT(*) FROM public."PROCESS_CORPORATE_RESULTS" PCR1
				WHERE PCR1."OP_ID_OPERATION_FK" = OPE."OP_ID_OPERATION_PK"
				AND PCR1."PA_ID_PARTICIPANT_FK" = PCR."PA_ID_PARTICIPANT_FK"
				AND PCR1."PCR_ORIGIN_DESTINY" = 1),0
			),
			NULLIF(
				(SELECT COUNT(*) FROM public."PROCESS_CORPORATE_RESULTS" PCR1        
				WHERE PCR1."OP_ID_OPERATION_FK" = OPE."OP_ID_OPERATION_PK"
				AND PCR1."PA_ID_PARTICIPANT_FK" = PCR."PA_ID_PARTICIPANT_FK"
				AND PCR1."PCR_ORIGIN_DESTINY" = 2), (SELECT COUNT(*) FROM public."PROCESS_CORPORATE_RESULTS" PCR1       
				WHERE PCR1."OP_ID_OPERATION_FK" = OPE."OP_ID_OPERATION_PK"
				AND PCR1."PA_ID_PARTICIPANT_FK" = PCR."PA_ID_PARTICIPANT_FK"
				AND PCR1."PCR_ORIGIN_DESTINY" = 1)
			)
		) PCR_TOTAL_ACCOUNTS,
        coalesce((SELECT distinct PBP."PBP_ID_PROCESS_ID_PK"
        FROM public."PART_CORPORATE_PROCESS_DETAIL" PCRD, public."PAYER_BANK_DETAILS" PBD, public."PAYER_BANK_PROCESSES" PBP
        WHERE PCRD."OP_ID_OPERATION_FK" = OPE."OP_ID_OPERATION_PK"
        AND PBP."PBP_ID_PROCESS_ID_PK" = PBD."PBP_ID_PROCESS_ID_FK"
        AND PBD."PBD_ID_PAYER_BANK_DETAIL_PK" = PCRD."PBD_ID_PAYER_BANK_DETAIL_FK"
        AND PBD."PA_ID_PARTICIPANT_FK" = PCR."PA_ID_PARTICIPANT_FK"),0) PBD_ID_PROCESS_ID_PK,
        coalesce((SELECT distinct PBP."PBP_IN_STATUS"
        FROM public."PART_CORPORATE_PROCESS_DETAIL" PCRD, public."PAYER_BANK_DETAILS" PBD, public."PAYER_BANK_PROCESSES" PBP
        WHERE PCRD."OP_ID_OPERATION_FK" = OPE."OP_ID_OPERATION_PK"
        AND PBP."PBP_ID_PROCESS_ID_PK" = PBD."PBP_ID_PROCESS_ID_FK"
        AND PBD."PBD_ID_PAYER_BANK_DETAIL_PK" = PCRD."PBD_ID_PAYER_BANK_DETAIL_FK"
        AND PBD."PA_ID_PARTICIPANT_FK" = PCR."PA_ID_PARTICIPANT_FK"),0) PBP_IN_STATUS,
        coalesce((SELECT SUM(PCRD."PC_TOTAL_BALANCE") 
        FROM public."PART_CORPORATE_PROCESS_DETAIL" PCRD, public."PAYER_BANK_DETAILS" PBD, public."PAYER_BANK_PROCESSES" PBP
        WHERE PCRD."OP_ID_OPERATION_FK" = OPE."OP_ID_OPERATION_PK"
        AND PBP."PBP_ID_PROCESS_ID_PK" = PBD."PBP_ID_PROCESS_ID_FK"
        AND PBP."PBP_IN_STATUS" = 2328
        AND PBD."PBD_ID_PAYER_BANK_DETAIL_PK" = PCRD."PBD_ID_PAYER_BANK_DETAIL_FK"
        AND PBD."PA_ID_PARTICIPANT_FK" = PCR."PA_ID_PARTICIPANT_FK"),0) PCR_TOTAL_PAYED,
        coalesce(CP."CP_IND_APPROVED_CHIEF_ISSUER",0) IND_CONFIRM_PAY
    FROM public."CORPORATIVE_PROCESSES" CP, public."OPERATIONS" OPE, public."SECURITIES" SE, 
         public."PROCESS_CORPORATE_RESULTS" PCR
    WHERE OPE."OP_ID_OPERATION_PK" = CP."OP_ID_OPERATION_FK"
    AND OPE."OP_ID_OPERATION_PK" = PCR."OP_ID_OPERATION_FK"
    AND SE."SE_CD_ISIN_CODE_PK" = CP."SE_CD_ISIN_CODE_FK"
    AND to_char(DATE_TRUNC('day',OPE."OP_DT_OPERATION"),'dd-mm-yyyy') = to_char(load_date,'dd-mm-yyyy');


return 'SUCESS';

exception when others then

return 'ERROR::load_tb_corporativos: '|| SQLSTATE ||'::'||SQLERRM;

end $function$

----

CREATE OR REPLACE FUNCTION control_panel.load_tb_factoring(load_date date)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$

BEGIN
	
	-- ELIMINO LA INFORMACION DEL DIA
    delete from tb_factoring T where TO_CHAR((T.OP_DT_CHANGE_DATE),'yyyy-mm-dd') =  TO_CHAR((load_date),'yyyy-mm-dd');
	
	-- CARGO LA INFORMACION
	insert into tb_factoring
	SELECT  
        DISTINCT 
		nextval('tb_factoring_id_seq') ID_FACTORING,
		INV."IN_ID_INVOICE_PK",  
        INV."IN_STATE",  
        INV."IN_PROVIDER_RUC_CK",
        INV."IN_SERIES_CK",
        INV."IN_NUMBERING_CK",
        coalesce(INV."IN_AUTHORIZATION_NUMBER",0) IN_AUTHORIZATION_NUMBER,
		(CASE WHEN INV."IN_ID_INVOICE_PK" IS NOT NULL THEN 'SI' ELSE 'NO' END ) JOIN_OPERATIONS,
		(CASE WHEN INV."IN_ACQ_RUC" IS NOT NULL THEN 'SI' ELSE 'NO' END ) JOIN_SUNAT_USERS,
		(CASE WHEN INV."IN_ACQ_RUC" IS NOT NULL AND SUN."SU_ID_PK" IS NOT NULL THEN 'SI' ELSE 'NO' END ) JOIN_RESPONSABLE_SUNAT_USERS,
		(CASE WHEN INV."IN_ID_INVOICE_PK" IS NOT NULL AND WPD."WPD_ID_DETAIL_PK" IS NOT NULL THEN 'SI' ELSE 'NO' END ) JOIN_WS_PROCESS_DETAILS,
		(CASE WHEN INV."IN_ID_INVOICE_PK" IS NOT NULL AND NOTI."NT_ID_NOTF_PK" IS NOT NULL THEN 'SI' ELSE 'NO' END ) JOIN_NOTIFICATIONS,
		TRUNC(coalesce(cast(OPE."OP_DT_CHANGE_DATE" as date),current_date)) OP_DT_CHANGE_DATE,
		coalesce(INV."IN_PARTICIPANT_CODE",0),  
		(SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA WHERE PA."PA_ID_PARTICIPANT_PK" = INV."IN_PARTICIPANT_CODE" ) PARTICIPANT_NAME,  
		(SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA WHERE PA."PA_ID_PARTICIPANT_PK" = INV."IN_PARTICIPANT_CODE" ) PARTICIPANT_MNEMONIC,  
		coalesce(INV."IN_ACQ_DELIVERY_DATE",load_date) IN_ACQ_DELIVERY_DATE,  
		(CASE WHEN OPE."OP_OPERATION_TYPE" = 24 THEN 'SI' ELSE 'NO' END) IND_OPERACION_ACV,  
		(CASE WHEN INV."IN_ACQ_RESPONSE" IS NULL THEN 'NO' ELSE 'SI' END ) IND_RESPUEST_ADQUI,  
		(CASE WHEN INV."IN_PRES_CONF_MARK" = 23 THEN 'NO' ELSE 'SI' END) IND_CONTEO_PRESUNCION,  
		(CASE WHEN INV."IN_STATE" = 2  THEN 'SI' ELSE 'NO' END) IND_FACT_ACV,  
		(CASE
            WHEN INV."IN_CURRENCY_TYPE" = 1 THEN 'S/. NUEVOS SOLES'
            WHEN INV."IN_CURRENCY_TYPE" = 2 THEN 'USD DOLARES AMERICANOS'
            WHEN INV."IN_CURRENCY_TYPE" = 3 THEN 'EUR EUROS'
            WHEN INV."IN_CURRENCY_TYPE" = 4 THEN 'PESOS CHILENOS'
            WHEN INV."IN_CURRENCY_TYPE" = 5 THEN 'PESOS COLOMBIANOS'
            WHEN INV."IN_CURRENCY_TYPE" = 6 THEN 'OTRAS MONEDAS'
            WHEN INV."IN_CURRENCY_TYPE" = 7 THEN 'DOLARES CANADIENSES'
        END) MONEDA_FACTURA,  
		(CASE WHEN SUN."SU_STATUS" = 22 THEN 'SI' ELSE 'NO' END) IND_ADQUI_INSCR_ACTIV,  
		(CASE WHEN RSU."RSU_STATUS" = 22  THEN 'SI' ELSE 'NO' END) IND_RESPON_INSCR_ACTIV,  
		(CASE WHEN NOTI."NT_TYPE" = 'FAC' THEN 'SI' ELSE 'NO' END) IND_NOTI_ADQUI,  
		(CASE WHEN NOTI."NT_VERIFY" IS NOT NULL THEN 'SI' ELSE 'NO' END) IND_NOTI_VERIFI,  
		coalesce(NOTI."NT_ST_RECEPTION",0) NT_ST_RECEPTION,  
		WPD."WPD_LOG_MESSAGE LOG_MESSAGE",
        (case when INV."IN_ACQ_RESPONSE" = 14  then 'SI' else 'NO' end) DISAGREEMENT_FACTRACK,  
        (case when (SELECT max(DINV."NI_CONFORMITY_TYPE") 
                    FROM public."NEGOTIABLE_INVOICE" DINV
                    WHERE DINV."NI_ISSUER_RUC" = INV."IN_PROVIDER_RUC_CK"
                    AND DINV."NI_SERIAL_NUMBER" = INV."IN_SERIES_CK"
                    AND DINV."NI_SEQ_NUMBER" = TO_CHAR(INV."IN_NUMBERING_CK", '9999') ) = 2 then 'SI' else 'NO' end ) DISAGREEMENT_WARI
	FROM public."INVOICES" INV  
	LEFT JOIN public."CAVFNDB_OPERATIONS" OPE ON INV."IN_ID_INVOICE_PK" = OPE."IN_ID_INVOICE_FK"  
	LEFT JOIN public."SUNAT_USER" SUN ON INV."IN_ACQ_RUC" = SUN."SU_RUC"  
	LEFT JOIN public."RESPONSIBLE_SUNAT_USER" RSU ON SUN."SU_ID_PK" = RSU."SU_ID_FK"  
	LEFT JOIN public."NOTIFICATIONS" NOTI ON NOTI."IN_ID_INVOICE_FK" = INV."IN_ID_INVOICE_PK"  
	LEFT JOIN public."WS_PROCESS_DETAILS" WPD ON WPD."IN_ID_INVOICE" = INV."IN_ID_INVOICE_PK"
    WHERE TO_CHAR((OPE."OP_DT_CHANGE_DATE"),'yyyy-mm-dd') = TO_CHAR(load_date,'yyyy-mm-dd');


return 'SUCESS';

exception when others then

return 'ERROR::load_tb_corporativos: '|| SQLSTATE ||'::'||SQLERRM;

end $function$


-- 

CREATE OR REPLACE FUNCTION control_panel.load_tb_factoring_error_process(load_date date)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$

BEGIN
	
	-- ELIMINO LA INFORMACION DEL DIA
    delete from tb_factoring_error_process T where TO_CHAR((T.WP_DT_CHANGE_DATE),'yyyy-mm-dd') =  TO_CHAR((load_date),'yyyy-mm-dd');
	
	-- CARGO LA INFORMACION
	insert into tb_factoring_error_process
	select distinct
	nextval('tb_factoring_error_process_id_seq') id_factoring_error_process,
	WPD."IN_ID_INVOICE",
	coalesce(WP."WP_PARTICIPANT_CODE",0) WP_PARTICIPANT_CODE,
	coalesce((SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA WHERE PA."PA_ID_PARTICIPANT_PK" = WP."WP_PARTICIPANT_CODE" ),'NO-DATA') PARTICIPANT_NAME, 
	coalesce((SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA WHERE PA."PA_ID_PARTICIPANT_PK" = WP."WP_PARTICIPANT_CODE" ),'NO-DATA') PARTICIPANT_MNEMONIC, 
	coalesce((SELECT PD."PRD_PARAMETER_NAME" FROM public."PARAMETER_DETAIL" PD WHERE PD."PRD_CODE_PARAMETER_PK" = WP."WP_STATE_PROCESS" ),'NO-DATA')DESC_STATE_PROCESS, 
	coalesce(WPD."WPD_LOG_MESSAGE",'NO-DATA') TIPO_ERROR, 
	WP."WP_DT_CHANGE_DATE" WP_DT_CHANGE_DATE,
	current_date register_date,
	current_date update_date
	from public."WS_PROCESSES" WP  
	INNER JOIN public."WS_PROCESS_DETAILS" WPD 
	ON WP."WP_ID_PROCESS_PK" = WPD."WP_ID_PROCESS_FK" 
	WHERE 
		WP."WP_STATE_PROCESS" = 43 AND 
		WPD."IN_ID_INVOICE" IS NOT NULL AND 
		TO_CHAR((WP."WP_DT_CHANGE_DATE"),'yyyy-mm-dd') = TO_CHAR((load_date),'yyyy-mm-dd');
	

return 'SUCESS';

exception when others then

return 'ERROR::load_tb_corporativos: '|| SQLSTATE ||'::'||SQLERRM;

end $function$


---

CREATE OR REPLACE FUNCTION control_panel.load_tb_garantias(load_date date)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$

BEGIN
	
	delete from tb_garantias where to_char(CGR."CGR_DT_CREATION_CARD",'dd-mm-yyyy') = to_char(load_date,'dd-mm-yyyy');

	insert into tb_garantias
	SELECT 
		distinct 
		nextval('tb_garantias_id_seq') id_garantias,
		CGR."CGR_CARD_ID_PK", 
	    HOP."PT_ID_STOCK_CHARGED_FK" PARTICIPANT_ID,
	    (SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA
	    WHERE PA."PA_ID_PARTICIPANT_PK" = HOP."PT_ID_STOCK_CHARGED_FK") PARTICIPANT_NAME,
	    (SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA
	    WHERE PA."PA_ID_PARTICIPANT_PK" = HOP."PT_ID_STOCK_CHARGED_FK") PARTICIPANT_MNEMONIC,
	    coalesce(GU."GU_AMOUNT",0) as GU_AMOUNT, 
	    CGR."CGR_ID_REPLACEMENT_STATUS" STATUS_ID, 
	    (SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
	    WHERE ET."EL_ELEMENT_TABLE_PK" = CGR."CGR_ID_REPLACEMENT_STATUS") STATUS_DESCRIPTION,
		CGR."CGR_DT_CREATION_CARD",  
	    MO."MO_ID_MODALITY",
	    ( SELECT "EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" WHERE "EL_ELEMENT_TABLE_PK" = MO."MO_ID_MODALITY") MO_MODALITY,
	    TOP."TO_CD_CURRENCY",
	    coalesce((SELECT SUM(subt1.VALORIZADO)
			 FROM (SELECT (GOP."GO_NR_AMOUNT_GUARANTEE" * coalesce((SELECT QU."QU_NR_AVE_PRICE" 
															FROM public."QUOTATIONS" QU, (SELECT MAX(QU."QU_DT_QUOTATION") FECHA, QU."SE_CD_ISIN_CODE_FK" as SE_CD_ISIN_CODE_FK
																						 FROM public."QUOTATIONS" QU
																						 GROUP BY QU."SE_CD_ISIN_CODE_FK") ULTIMO 
															WHERE QU."QU_DT_QUOTATION" = ULTIMO.FECHA 
															AND QU."SE_CD_ISIN_CODE_FK" = ULTIMO.SE_CD_ISIN_CODE_FK
															AND QU."SE_CD_ISIN_CODE_FK" = SBG."SE_CD_ISIN_CODE_FK"),SE."SE_NR_NOMINAL_VALUE") * coalesce(TVR."TL_GROUP_PERCENT"/100,1)) VALORIZADO, 
						  (SELECT QU."QU_NR_AVE_PRICE" 
						  FROM public."QUOTATIONS" QU, (SELECT MAX(QU."QU_DT_QUOTATION") FECHA, QU."SE_CD_ISIN_CODE_FK" as SE_CD_ISIN_CODE_FK
													   FROM public."QUOTATIONS" QU
													   GROUP BY QU."SE_CD_ISIN_CODE_FK") ULTIMO
						  WHERE QU."QU_DT_QUOTATION" = ULTIMO.FECHA
						  AND QU."SE_CD_ISIN_CODE_FK" = ULTIMO.SE_CD_ISIN_CODE_FK
						  AND QU."SE_CD_ISIN_CODE_FK" = SBG."SE_CD_ISIN_CODE_FK") COTIZACION,
						  SE."SE_NR_NOMINAL_VALUE",
						  GOP."HO_HOLDER_OPERATION_FK", 
						  GOP."GO_NR_AMOUNT_GUARANTEE", 
						  SBG."SE_CD_ISIN_CODE_FK",
						  TVR."TL_GROUP_PERCENT",
	                      GOP."CGR_CARD_ID_FK"
				  FROM public."GUARANTEE_OPERATIONS" GOP, public."OPERATIONS" OPE,
					   public."SECURITY_BAL_GUA_OPERATIONS" SBG, public."SECURITIES" SE LEFT JOIN public."TVR_LISTS" TVR ON SE."TL_ID_GROUP_FK" = TVR."TL_ID_GROUP_PK"
				  WHERE   
	               OPE."OP_ID_OPERATION_PK" = GOP."OP_ID_OPERATION_FK"
	              AND GOP."GO_IND_GUARANTEE_CLASS" = 2171
				  AND GOP."OP_ID_OPERATION_FK" = SBG."OP_ID_OPERATION_FK"
				  AND SE."SE_CD_ISIN_CODE_PK" = SBG."SE_CD_ISIN_CODE_FK"    
				  AND SE."SE_CD_CURRENCY" = 71) subt1
			 WHERE "HO_HOLDER_OPERATION_FK" = HOP."HO_HOLDER_OPERATION_PK"
	         AND "CGR_CARD_ID_FK" = CGR."CGR_CARD_ID_PK"
			 GROUP BY "HO_HOLDER_OPERATION_FK"),0) GO_SECURITIES_SOLES,
	    coalesce((SELECT SUM(subt2.VALORIZADO)
			 FROM (SELECT (GOP."GO_NR_AMOUNT_GUARANTEE" * coalesce((SELECT QU."QU_NR_AVE_PRICE" 
															FROM public."QUOTATIONS" QU, (SELECT MAX(QU."QU_DT_QUOTATION") FECHA, QU."SE_CD_ISIN_CODE_FK" as SE_CD_ISIN_CODE_FK
																						 FROM public."QUOTATIONS" QU
																						 GROUP BY QU."SE_CD_ISIN_CODE_FK") ULTIMO
															WHERE QU."QU_DT_QUOTATION" = ULTIMO.FECHA
															AND QU."SE_CD_ISIN_CODE_FK" = ULTIMO.SE_CD_ISIN_CODE_FK
															AND QU."SE_CD_ISIN_CODE_FK" = SBG."SE_CD_ISIN_CODE_FK"),SE."SE_NR_NOMINAL_VALUE") * coalesce(TVR."TL_GROUP_PERCENT"/100,1)) VALORIZADO, 
						  (SELECT QU."QU_NR_AVE_PRICE" 
						  FROM public."QUOTATIONS" QU, (SELECT MAX(QU."QU_DT_QUOTATION") FECHA, QU."SE_CD_ISIN_CODE_FK" as SE_CD_ISIN_CODE_FK
													   FROM public."QUOTATIONS" QU
													   GROUP BY QU."SE_CD_ISIN_CODE_FK") ULTIMO
						  WHERE QU."QU_DT_QUOTATION" = ULTIMO.FECHA
						  AND QU."SE_CD_ISIN_CODE_FK" = ULTIMO.SE_CD_ISIN_CODE_FK
						  AND QU."SE_CD_ISIN_CODE_FK" = SBG."SE_CD_ISIN_CODE_FK") COTIZACION,
						  SE."SE_NR_NOMINAL_VALUE",
						  GOP."HO_HOLDER_OPERATION_FK", 
						  GOP."GO_NR_AMOUNT_GUARANTEE", 
						  SBG."SE_CD_ISIN_CODE_FK",
						  TVR."TL_GROUP_PERCENT",
	                      GOP."CGR_CARD_ID_FK"
				  FROM public."GUARANTEE_OPERATIONS" GOP, public."OPERATIONS" OPE,
					   public."SECURITY_BAL_GUA_OPERATIONS" SBG, public."SECURITIES" SE LEFT JOIN public."TVR_LISTS" TVR ON SE."TL_ID_GROUP_FK" = TVR."TL_ID_GROUP_PK"
				  WHERE   
	               OPE."OP_ID_OPERATION_PK" = GOP."OP_ID_OPERATION_FK"
	              AND GOP."GO_IND_GUARANTEE_CLASS" = 2171
				  AND GOP."OP_ID_OPERATION_FK" = SBG."OP_ID_OPERATION_FK"
				  AND SE."SE_CD_ISIN_CODE_PK" = SBG."SE_CD_ISIN_CODE_FK"    
				  AND SE."SE_CD_CURRENCY" = 72) subt2
			 WHERE "HO_HOLDER_OPERATION_FK" = HOP."HO_HOLDER_OPERATION_PK"
	         AND "CGR_CARD_ID_FK" = CGR."CGR_CARD_ID_PK"
			 GROUP BY "HO_HOLDER_OPERATION_FK"),0) GO_SECURITIES_DOLARES,
	    coalesce((SELECT SUM(GOP."GO_NR_AMOUNT_GUARANTEE") 
	    FROM public."GUARANTEE_OPERATIONS" GOP, public."OPERATIONS" OPE,
	         public."CASH_BALANCE_GUA_OPERATIONS" CBG
	    WHERE GOP."CGR_CARD_ID_FK" = CGR."CGR_CARD_ID_PK"
	    AND OPE."OP_ID_OPERATION_PK" = GOP."OP_ID_OPERATION_FK"
	    AND GOP."GO_IND_GUARANTEE_CLASS" = 2172
	    AND CBG."CBO_CURRENCY_TYPE" = 71
	    AND GOP."OP_ID_OPERATION_FK" = CBG."OP_ID_OPERATION_FK"
	    AND GOP."HO_HOLDER_OPERATION_FK" = HOP."HO_HOLDER_OPERATION_PK"
	    GROUP BY GOP."HO_HOLDER_OPERATION_FK"),0) FUNDS_SOLES,
	    coalesce((SELECT SUM(GOP."GO_NR_AMOUNT_GUARANTEE") 
	    FROM public."GUARANTEE_OPERATIONS" GOP, public."OPERATIONS" OPE,
	         public."CASH_BALANCE_GUA_OPERATIONS" CBG
	    WHERE GOP."CGR_CARD_ID_FK" = CGR."CGR_CARD_ID_PK"
	    AND OPE."OP_ID_OPERATION_PK" = GOP."OP_ID_OPERATION_FK"
	    AND GOP."GO_IND_GUARANTEE_CLASS" = 2172
	    AND CBG."CBO_CURRENCY_TYPE" = 72
	    AND GOP."OP_ID_OPERATION_FK" = CBG."OP_ID_OPERATION_FK"
	    AND GOP."HO_HOLDER_OPERATION_FK" = HOP."HO_HOLDER_OPERATION_PK"
	    GROUP BY GOP."HO_HOLDER_OPERATION_FK"),0) FUNDS_DOLARES,
	    coalesce((select der."DE_NR_AVERAGE_PRICE" from public."DAILY_EXCHANGE_RATES" der where to_char(der."DE_DT_RATE",'dd-mm-yyyy') = to_char(current_date,'dd-mm-yyyy')
			and der."DE_ID_SOURCE" = 2185 and der."DE_ID_CURRENCY"=72 ),0) EXCHANGE_RATE
	FROM 
		public."GUARANTEE_UNVALORIZATIONS" GU, 
		public."CARD_GUARANTEE_REPLACEMENTS" CGR, 
		public."HOLDER_OPERATIONS" HOP,  
	    public."MECHANISM_OPERATIONS" MO,
	    public."GUARANTEE_OPERATION_BALANCES" GOB,
	    public."SECURITY_GUAR_OPER_BALANCES" SBG,
	    public."TRADE_OPERATIONS" TOP
	WHERE 
		GU."GU_CODE_ID_PK" = CGR."GU_CODE_ID_FK"
	    AND CGR."HO_HOLDER_OPERATION_FK" = HOP."HO_HOLDER_OPERATION_PK"
	    AND to_char(CGR."CGR_DT_CREATION_CARD",'dd-mm-yyyy') = to_char(load_date,'dd-mm-yyyy')
	    AND MO."OP_ID_OPERATION_FK" = HOP."OP_ID_OPERATION_FK"
	    AND MO."MO_ID_MODALITY" IN (237,246)  
	    AND GOB."HO_HOLDER_OPERATION_FK" = HOP."HO_HOLDER_OPERATION_PK"
	    AND SBG."GOB_ID_BALANCE_FK" = GOB."GOB_ID_BALANCE_PK"
	    AND TOP."OP_ID_OPERATION_FK" = MO."OP_ID_OPERATION_FK";


return 'SUCESS';

exception when others then

return 'ERROR::load_tb_corporativos: '|| SQLSTATE ||'::'||SQLERRM;

end $function$


---

CREATE OR REPLACE FUNCTION control_panel.load_tb_internacionales(load_date date)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$

BEGIN
	
  -- ELIMINO LA INFORMACION DEL DIA
  DELETE from tb_internacionales T where TO_CHAR((T.INT_CONCILIATION_DATE),'yyyy-mm-dd') =  TO_CHAR((load_date),'yyyy-mm-dd');
	
  insert into tb_internacionales
  select  nextval('tb_internacionales_id_seq') id_internacionales, query.*
  from (
  SELECT  
	  R."RE_ID_REQUEST_PK",
	  DSR."DSR_ID_DEPOSITARY" INT_ID_DEPOSITARY,
	  (SELECT E."EL_ELEMENT_NAME" 
	  FROM public."ELEMENT_TABLES" E 
	  WHERE E."EL_ELEMENT_TABLE_PK" = DSR."DSR_ID_DEPOSITARY") INT_DEPOSITARY, 
	  2 INT_ID_TRANSACTION_TYPE,
	  'ENVIO' INT_TRANSACTION_TYPE, 
	  DSR."DSR_ID_OPE_TYPE" INT_ID_OPE_TYPE,
	  (SELECT E."EL_ELEMENT_NAME" 
	  FROM public."ELEMENT_TABLES" E 
	  WHERE E."EL_ELEMENT_TABLE_PK" = DSR."DSR_ID_OPE_TYPE") INT_OPE_TYPE, 
	  DSR."SE_CD_ISIN_CODE_CK",
	  SE."SE_ST_MNEMONIC",
	  SE."SE_ID_INSTRUMENT_TYPE",
	  (SELECT E."EL_ELEMENT_NAME" 
	  FROM public."ELEMENT_TABLES" E 
	  WHERE E."EL_ELEMENT_TABLE_PK" = SE."SE_ID_INSTRUMENT_TYPE") SE_INSTRUMENT_TYPE,
	  SE."SE_SECURITY_ORIGIN",
	  (SELECT ET."EL_ELEMENT_NAME" 
	   FROM public."ELEMENT_TABLES" ET
	   WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_SECURITY_ORIGIN") SE_ORIGIN,
	  DSR."PA_ID_PARTICIPANT_CK",
	  (SELECT P."PA_ST_TRADE_NAME" 
	    FROM public."PARTICIPANTS" P 
	    WHERE P."PA_ID_PARTICIPANT_PK" = DSR."PA_ID_PARTICIPANT_CK") PA_ST_TRADE_NAME, 
	  DSR."DSR_NR_TRANSACTION" INT_NR_OPERATION, 
	  PI."PI_CD_PARTICIPANT",
	  PI."PI_ST_DESCRIPTION" AS PI_ST_PARTICIPANT, 
	  COR."COR_NR_QUANTITY", 
	  R."RE_IND_STATUS",
	  (SELECT E1."EL_ELEMENT_NAME" 
	  FROM public."ELEMENT_TABLES" E1 
	  WHERE E1."EL_ELEMENT_TABLE_PK" = R."RE_IND_STATUS") RE_STATUS, 
	  coalesce(DSR."DSR_ID_CURRENCY",0) INT_ID_CURRENCY,
	  coalesce((SELECT E1."EL_ELEMENT_NAME" 
	  FROM public."ELEMENT_TABLES" E1 
	  WHERE E1."EL_ELEMENT_TABLE_PK" = DSR."DSR_ID_CURRENCY"),'N/C') INT_CURRENCY, 
	  R."RE_DT_REQUEST_DATE" RE_REGISTER_DATE, 
	  DSR."DSR_DT_CONFIRMATION" INT_CONCILIATION_DATE, 
	  coalesce(DSR."DSR_NR_AMOUNT",0) INT_TOTAL_AMOUNT
	FROM public."DTC_SEND_REQUESTS" DSR 
	    JOIN public."CUSTODY_OPERATION_REQUESTS" COR 
	        ON COR."RE_ID_REQUEST_FK" = DSR."RE_ID_REQUEST_FK" 
	    JOIN public."PARTICIPANTS_INT" PI 
	        ON PI."PI_ID_PARTICIPANT_PK" = DSR."DSR_ID_INTER_PARTICIPANT" 
	    JOIN public."REQUESTS" R 
	        ON R."RE_ID_REQUEST_PK" = DSR."RE_ID_REQUEST_FK"   
	    JOIN public."SECURITIES" SE 
	        ON SE."SE_CD_ISIN_CODE_PK" = DSR."SE_CD_ISIN_CODE_CK"        
	WHERE to_char(DSR."DSR_DT_CONFIRMATION",'dd-mm-yyyy') = to_char(load_date,'dd-mm-yyyy')
	UNION
	SELECT  
	  nextval('tb_internacionales_id_seq') id_internacionales,
	  R."RE_ID_REQUEST_PK",
	  PR."PR_ID_DEPOSITARY",
	  (SELECT E."EL_ELEMENT_NAME" 
	  FROM public."ELEMENT_TABLES" E 
	  WHERE E."EL_ELEMENT_TABLE_PK" = PR."PR_ID_DEPOSITARY") INT_DEPOSITARY, 
	  1 INT_ID_TRANSACTION_TYPE,
	  'RECEPCION' INT_TRANSACTION_TYPE, 
	  PR."PR_ID_OPE_TYPE" INT_ID_OPE_TYPE,
	  (SELECT E."EL_ELEMENT_NAME" 
	  FROM public."ELEMENT_TABLES" E 
	  WHERE E."EL_ELEMENT_TABLE_PK" = PR."PR_ID_OPE_TYPE") INT_OPE_TYPE, 
	  PR."SE_CD_ISIN_CODE_FK",
	  SE."SE_ST_MNEMONIC",
	  SE."SE_ID_INSTRUMENT_TYPE",
	  (SELECT E."EL_ELEMENT_NAME" 
	  FROM public."ELEMENT_TABLES" E 
	  WHERE E."EL_ELEMENT_TABLE_PK" = SE."SE_ID_INSTRUMENT_TYPE") SE_INSTRUMENT_TYPE,
	  SE."SE_SECURITY_ORIGIN",
	  (SELECT ET."EL_ELEMENT_NAME" 
	  FROM public."ELEMENT_TABLES" ET
	  WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_SECURITY_ORIGIN") SE_ORIGIN,
	  PR."PA_ID_PARTICIPANT_FK",
	  (SELECT P."PA_ST_TRADE_NAME" 
	  FROM public."PARTICIPANTS" P 
	  WHERE P."PA_ID_PARTICIPANT_PK" = PR."PA_ID_PARTICIPANT_FK") PA_ST_TRADE_NAME, 
	  PR."PR_NR_TRANSACTION" INT_NR_OPERATION,
	  PI."PI_CD_PARTICIPANT",
	  PI."PI_ST_DESCRIPTION" AS PI_ST_PARTICIPANT, 
	  COR."COR_NR_QUANTITY", 
	  R."RE_IND_STATUS",
	  (SELECT E1."EL_ELEMENT_NAME" 
	  FROM public."ELEMENT_TABLES" E1 
	  WHERE E1."EL_ELEMENT_TABLE_PK" = R."RE_IND_STATUS") RE_STATUS, 
	  coalesce(PR."PR_ID_CURRENCY",0) INT_ID_CURRENCY,
	  coalesce((SELECT E1."EL_ELEMENT_NAME" 
	  FROM public."ELEMENT_TABLES" E1 
	  WHERE E1."EL_ELEMENT_TABLE_PK" = PR."PR_ID_CURRENCY"),'N/C') INT_CURRENCY,  
	  R."RE_DT_REQUEST_DATE" RE_REGISTER_DATE,
	  PR."PR_DT_CONCILIATION" INT_SETTLEMENT_DATE, 
	  coalesce(PR."PR_NR_AMOUNT",0) INT_TOTAL_AMOUNT
	FROM public."PA_RECEPTION_REQUESTS" PR 
	JOIN public."CUSTODY_OPERATION_REQUESTS" COR 
	    ON COR."RE_ID_REQUEST_FK" = PR."RE_ID_REQUEST_FK" 
	JOIN public."PARTICIPANTS_INT" PI 
	    ON PI."PI_ID_PARTICIPANT_PK" = PR."PR_ID_INTER_PARTICIPANT" 
	JOIN public."REQUESTS" R 
	    ON R."RE_ID_REQUEST_PK" = PR."RE_ID_REQUEST_FK" 
	JOIN public."SECURITIES" SE 
	    ON SE."SE_CD_ISIN_CODE_PK" = PR."SE_CD_ISIN_CODE_FK"
	where to_char(PR."PR_DT_CONCILIATION",'dd-mm-yyyy') = to_char(load_date,'dd-mm-yyyy')
	) query ;



return 'SUCESS';

exception when others then

return 'ERROR::load_tb_corporativos: '|| SQLSTATE ||'::'||SQLERRM;

end $function$


---

CREATE OR REPLACE FUNCTION control_panel.load_tb_liquidaciones(load_date date)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$


BEGIN
	

	delete from tb_liquidaciones t where to_char(t.SETTLEMENT_DATE,'dd-mm-yyyy') = to_char(load_date,'dd-mm-yyyy');

	insert into tb_liquidaciones
	select 
	nextval('tb_liquidaciones_id_seq') id_liquidaciones, query.*
	from (
		SELECT 
		OPE."OP_ID_OPERATION_PK",
		OPE."NM_ID_MECHANISM_FK",
		(SELECT NM."NM_ST_NAME" FROM public."NEGOTIATION_MECHANISMS" NM 
		WHERE NM."NM_ID_MECHANISM_PK" = OPE."NM_ID_MECHANISM_FK") NM_MECHANISM,
		MOP."MO_ID_MODALITY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = MOP."MO_ID_MODALITY") MO_MODALITY,
		MO."MG_ID_MODALITY_GROUP_FK",
		(SELECT MG."MW_MODALITY_WRAPPER_NAME" FROM public."MODALITY_GROUPS" MG 
		WHERE MG."MG_ID_MODALITY_GROUP_PK" = MO."MG_ID_MODALITY_GROUP_FK") MG_MODALITY_GROUP,
		OPE."OP_NR_OPERATION",
		OPE."OP_DT_OPERATION",
		TOP."TO_DT_REAL_SETTLEMENT" SETTLEMENT_DATE,
		OPE."OP_ID_STATE",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = OPE."OP_ID_STATE") OP_STATE,
		TOP."TO_CD_CURRENCY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = TOP."TO_CD_CURRENCY") TO_CURRENCY,
		TOP."PA_ID_PARTICIPANT_BUYER_FK",
		(SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_BUYER_FK") PA_BUYER,
		(SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_BUYER_FK") PA_BUYER_MNEMONIC,
		TOP."PA_ID_PARTICIPANT_SELLER_FK",
		(SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_SELLER_FK") PA_SELLER,
		(SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_SELLER_FK") PA_SELLER_MNEMONIC,
		TOP."SE_CD_ISIN_CODE_FK",
		SE."SE_ST_MNEMONIC",
		SE."SE_ID_INSTRUMENT_TYPE",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_ID_INSTRUMENT_TYPE") SE_INSTRUMENT_TYPE,
		SE."SE_SECURITY_ORIGIN",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_SECURITY_ORIGIN") SE_ORIGIN,
		SE."SE_CD_CURRENCY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_CD_CURRENCY") SE_CURRENCY,
		coalesce(TOP."TO_NR_EFF_AMOUNT",0) as SETTLEMENT_AMOUNT,
		TOP."TO_QUANTITY_STOCKS",
		(CASE WHEN TOP."TO_IN_SECURITIES_BLOCKED" = 1 THEN 'SI' ELSE 'NO' END ) TO_SECURITIES_BLOCKED,
	    (CASE WHEN MOP."MO_ID_MODALITY" = 239 ---MOP
		THEN (CASE WHEN TOP."TO_IN_CASH_INTERESTS_DELIVERED" = 1 AND TOP."TO_IN_TERM_FUNDS_DELIVERED" = 1 THEN 'SI' ELSE 'NO' END) 
		ELSE (CASE WHEN TOP."TO_IN_CASH_FUNDS_DELIVERED" = 1 THEN 'SI' ELSE 'NO' END )  END ) TO_FUNDS_DELIVERED,
		'1' OPERATION_PART, 
		(CASE WHEN MOP."MO_IN_PH_HANDLING" = 1 THEN 'SI' ELSE 'NO' END) IND_PH
	FROM public."OPERATIONS" OPE,
		public."TRADE_OPERATIONS" TOP,
		public."SECURITIES" SE,
		public."MECHANISM_OPERATIONS" MOP,
		public."MODALITIES" MO
	WHERE OPE."OP_ID_OPERATION_PK" = TOP."OP_ID_OPERATION_FK"
	AND OPE."OP_ID_OPERATION_PK" = MOP."OP_ID_OPERATION_FK"
	AND MO."MW_ID_MODALITY_PK" = MOP."MO_ID_MODALITY"
	AND TOP."SE_CD_ISIN_CODE_FK" = SE."SE_CD_ISIN_CODE_PK"
	AND TO_CHAR(TOP."TO_DT_REAL_SETTLEMENT",'dd-mm-yyyy')  = TO_CHAR(load_date,'dd-mm-yyyy') 
	UNION  
	SELECT 
		OPE."OP_ID_OPERATION_PK",
		OPE."NM_ID_MECHANISM_FK",
		(SELECT NM."NM_ST_NAME" FROM public."NEGOTIATION_MECHANISMS" NM 
		WHERE NM."NM_ID_MECHANISM_PK" = OPE."NM_ID_MECHANISM_FK") NM_MECHANISM,
		MOP."MO_ID_MODALITY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = MOP."MO_ID_MODALITY") MO_MODALITY,
		MO."MG_ID_MODALITY_GROUP_FK",
		(SELECT MG."MW_MODALITY_WRAPPER_NAME" FROM public."MODALITY_GROUPS" MG 
		WHERE MG."MG_ID_MODALITY_GROUP_PK" = MO."MG_ID_MODALITY_GROUP_FK") MG_MODALITY_GROUP,
		OPE."OP_NR_OPERATION",
		OPE."OP_DT_OPERATION",
		SLO."SLO_DT_REAL_TERM_SETTLEMENT" SETTLEMENT_DATE,
		OPE."OP_ID_STATE",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = OPE."OP_ID_STATE") OP_STATE,
		TOP."TO_CD_CURRENCY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = TOP."TO_CD_CURRENCY") TO_CURRENCY,
		TOP."PA_ID_PARTICIPANT_BUYER_FK",
		(SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_BUYER_FK") PA_BUYER,
		(SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_BUYER_FK") PA_BUYER_MNEMONIC,
		TOP."PA_ID_PARTICIPANT_SELLER_FK",
		(SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_SELLER_FK") PA_SELLER,
		(SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_SELLER_FK") PA_SELLER_MNEMONIC,
		TOP."SE_CD_ISIN_CODE_FK",
		SE."SE_ST_MNEMONIC",
		SE."SE_ID_INSTRUMENT_TYPE",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_ID_INSTRUMENT_TYPE") SE_INSTRUMENT_TYPE,
		SE."SE_SECURITY_ORIGIN",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_SECURITY_ORIGIN") SE_ORIGIN,
		SE."SE_CD_CURRENCY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_CD_CURRENCY") SE_CURRENCY,
		coalesce(SLO."SLO_NR_TERM_AMOUNT",0) as SETTLEMENT_AMOUNT,
		TOP."TO_QUANTITY_STOCKS",
		(CASE WHEN TOP."TO_IN_BLOCKED_STOCK_TERM" = 1 THEN 'SI' ELSE 'NO' END ) TO_SECURITIES_BLOCKED,
		(CASE WHEN TOP."TO_IN_TERM_FUNDS_DELIVERED" = 1 THEN 'SI' ELSE 'NO' END ) TO_FUNDS_DELIVERED,
		'2' OPERATION_PART, 
		(CASE WHEN MOP."MO_IN_PH_HANDLING" = 1 THEN 'SI' ELSE 'NO' END ) IND_PH
	FROM public."OPERATIONS" OPE,
		public."TRADE_OPERATIONS" TOP,
		public."SECURITIES" SE,
		public."MECHANISM_OPERATIONS" MOP,
		public."MODALITIES" MO,
		public."SECURITIES_LOAN_OPERATIONS" SLO
	WHERE OPE."OP_ID_OPERATION_PK" = TOP."OP_ID_OPERATION_FK"
	AND OPE."OP_ID_OPERATION_PK" = MOP."OP_ID_OPERATION_FK"
	AND MO."MW_ID_MODALITY_PK" = MOP."MO_ID_MODALITY" 
	AND TOP."SE_CD_ISIN_CODE_FK" = SE."SE_CD_ISIN_CODE_PK"
	AND SLO."OP_ID_OPERATION_FK" = TOP."OP_ID_OPERATION_FK"
	AND TO_CHAR(SLO."SLO_DT_REAL_TERM_SETTLEMENT",'dd-mm-yyyy') = TO_CHAR(load_date,'dd-mm-yyyy') 
	UNION 
	SELECT 
		OPE."OP_ID_OPERATION_PK",
		OPE."NM_ID_MECHANISM_FK",
		(SELECT NM."NM_ST_NAME" FROM public."NEGOTIATION_MECHANISMS" NM 
		WHERE NM."NM_ID_MECHANISM_PK" = OPE."NM_ID_MECHANISM_FK") NM_MECHANISM,
		MOP."MO_ID_MODALITY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = MOP."MO_ID_MODALITY") MO_MODALITY,
		MO."MG_ID_MODALITY_GROUP_FK",
		(SELECT MG."MW_MODALITY_WRAPPER_NAME" FROM public."MODALITY_GROUPS" MG 
		WHERE MG."MG_ID_MODALITY_GROUP_PK" = MO."MG_ID_MODALITY_GROUP_FK") MG_MODALITY_GROUP,
		OPE."OP_NR_OPERATION",
		OPE."OP_DT_OPERATION",
		RO."RO_DT_TERM_SETTLEMENT" SETTLEMENT_DATE,
		OPE."OP_ID_STATE",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = OPE."OP_ID_STATE") OP_STATE,
		TOP."TO_CD_CURRENCY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = TOP."TO_CD_CURRENCY") TO_CURRENCY,
		TOP."PA_ID_PARTICIPANT_BUYER_FK",
		(SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_BUYER_FK") PA_BUYER,
		(SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_BUYER_FK") PA_BUYER_MNEMONIC,
		TOP."PA_ID_PARTICIPANT_SELLER_FK",
		(SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_SELLER_FK") PA_SELLER,
		(SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_SELLER_FK") PA_SELLER_MNEMONIC,
		TOP."SE_CD_ISIN_CODE_FK",
		SE."SE_ST_MNEMONIC",
		SE."SE_ID_INSTRUMENT_TYPE",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_ID_INSTRUMENT_TYPE") SE_INSTRUMENT_TYPE,
		SE."SE_SECURITY_ORIGIN",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_SECURITY_ORIGIN") SE_ORIGIN,
		SE."SE_CD_CURRENCY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_CD_CURRENCY") SE_CURRENCY,
		coalesce(RO."RO_NR_EFECTIVE_AMOUNT",0) SETTLEMENT_AMOUNT,
		TOP."TO_QUANTITY_STOCKS",
		'SI' TO_SECURITIES_BLOCKED,
		(CASE WHEN TOP."TO_IN_TERM_FUNDS_DELIVERED" = 1 THEN 'SI' ELSE 'NO' END) TO_FUNDS_DELIVERED,
		'2' OPERATION_PART,  
		(CASE WHEN MOP."MO_IN_PH_HANDLING" = 1 THEN 'SI' ELSE 'NO' END) IND_PH
	FROM public."OPERATIONS" OPE,
		public."TRADE_OPERATIONS" TOP,
		public."SECURITIES" SE,
		public."MECHANISM_OPERATIONS" MOP,
		public."MODALITIES" MO,
		public."REPORT_OPERATIONS" RO 
	WHERE OPE."OP_ID_OPERATION_PK" = TOP."OP_ID_OPERATION_FK"
	AND OPE."OP_ID_OPERATION_PK" = MOP."OP_ID_OPERATION_FK"
	AND MO."MW_ID_MODALITY_PK" = MOP."MO_ID_MODALITY" 
	AND TOP."SE_CD_ISIN_CODE_FK" = SE."SE_CD_ISIN_CODE_PK"
	AND RO."OP_ID_OPERATION_FK" = TOP."OP_ID_OPERATION_FK"
	AND TO_CHAR(RO."RO_DT_TERM_SETTLEMENT",'dd-mm-yyyy') = TO_CHAR(load_date,'dd-mm-yyyy') 
	UNION 
	SELECT 
		OPE."OP_ID_OPERATION_PK",
		OPE."NM_ID_MECHANISM_FK",
		(SELECT NM."NM_ST_NAME" FROM public."NEGOTIATION_MECHANISMS" NM 
		WHERE NM."NM_ID_MECHANISM_PK" = OPE."NM_ID_MECHANISM_FK") NM_MECHANISM,
		MOP."MO_ID_MODALITY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = MOP."MO_ID_MODALITY") MO_MODALITY,
		MO."MG_ID_MODALITY_GROUP_FK",
		(SELECT MG."MW_MODALITY_WRAPPER_NAME" FROM public."MODALITY_GROUPS" MG 
		WHERE MG."MG_ID_MODALITY_GROUP_PK" = MO."MG_ID_MODALITY_GROUP_FK") MG_MODALITY_GROUP,
		OPE."OP_NR_OPERATION",
		OPE."OP_DT_OPERATION",
		RO."FIO_DT_TERM_SETTLEMENT" SETTLEMENT_DATE,
		OPE."OP_ID_STATE",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = OPE."OP_ID_STATE") OP_STATE,
		TOP."TO_CD_CURRENCY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
		WHERE ET."EL_ELEMENT_TABLE_PK" = TOP."TO_CD_CURRENCY") TO_CURRENCY,
		TOP."PA_ID_PARTICIPANT_BUYER_FK",
		(SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_BUYER_FK") PA_BUYER,
		(SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_BUYER_FK") PA_BUYER_MNEMONIC,
		TOP."PA_ID_PARTICIPANT_SELLER_FK",
		(SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_SELLER_FK") PA_SELLER,
		(SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA
		WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_SELLER_FK") PA_SELLER_MNEMONIC,
		TOP."SE_CD_ISIN_CODE_FK",
		SE."SE_ST_MNEMONIC",
		SE."SE_ID_INSTRUMENT_TYPE",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_ID_INSTRUMENT_TYPE") SE_INSTRUMENT_TYPE,
		SE."SE_SECURITY_ORIGIN",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_SECURITY_ORIGIN") SE_ORIGIN,
		SE."SE_CD_CURRENCY",
		(SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET
		WHERE ET."EL_ELEMENT_TABLE_PK" = SE."SE_CD_CURRENCY") SE_CURRENCY,
		coalesce(RO."FIO_NR_TERM_AMOUNT",0) SETTLEMENT_AMOUNT,
		TOP."TO_QUANTITY_STOCKS",
		'SI' TO_SECURITIES_BLOCKED,
		(CASE WHEN TOP."TO_IN_CASH_INTERESTS_DELIVERED" = 1 AND TOP."TO_IN_TERM_FUNDS_DELIVERED" = 1 THEN 'SI' ELSE 'NO' END) TO_FUNDS_DELIVERED,
		'2' OPERATION_PART,  
		(CASE WHEN MOP."MO_IN_PH_HANDLING" = 1 THEN 'SI' ELSE 'NO' END) IND_PH
	FROM public."OPERATIONS" OPE,
		public."TRADE_OPERATIONS" TOP,
		public."SECURITIES" SE,
		public."MECHANISM_OPERATIONS" MOP,
		public."MODALITIES" MO,
		public."FIXED_INCOME_OPERATIONS" RO  
	WHERE OPE."OP_ID_OPERATION_PK" = TOP."OP_ID_OPERATION_FK"
	AND OPE."OP_ID_OPERATION_PK" = MOP."OP_ID_OPERATION_FK"
	AND MO."MW_ID_MODALITY_PK" = MOP."MO_ID_MODALITY" 
	AND TOP."SE_CD_ISIN_CODE_FK" = SE."SE_CD_ISIN_CODE_PK"
	AND RO."OP_ID_OPERATION_FK" = TOP."OP_ID_OPERATION_FK"
	AND TO_CHAR(RO."FIO_DT_TERM_SETTLEMENT",'dd-mm-yyyy') = TO_CHAR(load_date,'dd-mm-yyyy') 
	) query;


return 'SUCESS';

exception when others then

return 'ERROR::load_tb_corporativos: '|| SQLSTATE ||'::'||SQLERRM;

END $function$


---

CREATE OR REPLACE FUNCTION control_panel.load_tb_liquidaciones_ciclos(load_date date)
 RETURNS character varying
 LANGUAGE plpgsql
AS $function$

BEGIN
	

	delete from tb_liquidaciones_ciclos t where to_char(t.SETTLEMENT_DATE,'dd-mm-yyyy') = to_char(current_date,'dd-mm-yyyy');
	
	insert into tb_liquidaciones_ciclos
	SELECT 
	nextval('tb_liquidaciones_ciclos_id_seq') id_liquidaciones_ciclos,
    OPE."OP_ID_OPERATION_PK",
    (SELECT ET."EL_ELEMENT_NAME" FROM public."ELEMENT_TABLES" ET 
    WHERE ET."EL_ELEMENT_TABLE_PK" = MO."MO_ID_MODALITY") MO_MODALITY,
    SE."SE_CD_CURRENCY",  
	TOP."TO_CD_CURRENCY",  
    (SELECT PA."PA_ST_TRADE_NAME" FROM public."PARTICIPANTS" PA
    WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_BUYER_FK") PA_BUYER,
    (SELECT PA."PA_MNEMONIC" FROM public."PARTICIPANTS" PA
    WHERE PA."PA_ID_PARTICIPANT_PK" = TOP."PA_ID_PARTICIPANT_BUYER_FK") PA_BUYER_NEMONIC,
    coalesce(TOP."TO_NR_EFF_AMOUNT",0) as SETTLEMENT_AMOUNT,
    OPE."OP_ID_STATE",
    TOP."TO_DT_REAL_SETTLEMENT" SETTLEMENT_DATE,
    MAX(TO_CHAR(CSP."CSP_DT_CREATE_DATE",'hh24'))||':00' HOUR_SETTLEMENT_CHAR,
    MAX(coalesce(TO_NUMBER(TO_CHAR(CSP."CSP_DT_CREATE_DATE",'hh24'),'99'),0)) HOUR_SETTLEMENT_NUMBER
FROM public."OPERATIONS" OPE
     INNER JOIN public."TRADE_OPERATIONS" TOP ON OPE."OP_ID_OPERATION_PK" = TOP."OP_ID_OPERATION_FK" 
     INNER JOIN public."SECURITIES" SE ON TOP."SE_CD_ISIN_CODE_FK" = SE."SE_CD_ISIN_CODE_PK"
     INNER JOIN public."MECHANISM_OPERATIONS" MO ON MO."OP_ID_OPERATION_FK" = OPE."OP_ID_OPERATION_PK"
     INNER JOIN public."MODALITIES" MS ON MS."MW_ID_MODALITY_PK" = MO."MO_ID_MODALITY"
     LEFT JOIN public."SETTLEMENT_OPERATIONS" SO ON SO."OP_ID_OPERATION_FK" = OPE."OP_ID_OPERATION_PK"
     LEFT JOIN public."SETTLEMENT_PROCESSES" SP ON SO."SP_ID_PROCESS_FK" = SP."SP_ID_PROCESS_PK"
     LEFT JOIN public."CONTINUOUS_SETTLEMENT_PROCESS" CSP ON SP."CSP_ID_CONTINUOUS_SETTLE_FK" = CSP."CSP_ID_CONTINUOUS_SETTLE_PK"
WHERE 
    OPE."OP_ID_STATE" = 2014
    AND TOP."TO_IN_SECURITIES_DELIVERED" = 1
    AND MS."MG_ID_MODALITY_GROUP_FK" = 1
    AND to_char(TOP."TO_DT_REAL_SETTLEMENT",'dd-mm-yyyy') =  to_char(current_date,'dd-mm-yyyy')
GROUP BY 
    OPE."OP_ID_OPERATION_PK",MO."MO_ID_MODALITY",SE."SE_CD_CURRENCY","TO_CD_CURRENCY","PA_ID_PARTICIPANT_BUYER_FK",TOP."TO_NR_EFF_AMOUNT",
	OPE."OP_ID_STATE",TOP."TO_DT_REAL_SETTLEMENT";


return 'SUCESS';

exception when others then

return 'ERROR::load_tb_corporativos: '|| SQLSTATE ||'::'||SQLERRM;

end $function$
